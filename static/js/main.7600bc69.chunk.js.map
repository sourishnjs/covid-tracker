{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.PNG"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","border","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","classNames","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","Chart","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7600bc69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3GXN8\",\"card\":\"Cards_card__47m1X\",\"infected\":\"Cards_infected__3StM_\",\"recovered\":\"Cards_recovered__XL-wu\",\"deaths\":\"Cards_deaths__3fOZR\"};","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate} }) => {\r\n  if (!confirmed) {\r\n      return 'Loading...'\r\n  }\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing = {3} justify='center'>\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=','\r\n                                />\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of Active Cases of Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n                        <Typography variant='h5'><CountUp start={0} end={recovered.value} duration={2.5} separator=',' /></Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of Recoveries from Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5'><CountUp start={0} end={deaths.value} duration={2.5} separator=',' /></Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of Deaths by Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Cards","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n    try{\r\n        const {data: { confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableUrl) //to receive only data we need and use\r\n        \r\n        const modifiedData = {confirmed, recovered, deaths, lastUpdate}\r\n        \r\n        return modifiedData\r\n\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () =>{\r\n    try{\r\n        const { data } = await axios.get(`${url}/daily`)\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }))\r\n\r\n    return modifiedData\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async () => { \r\n    try {\r\n        const {data: { countries }} = await axios.get(`${url}/countries`)\r\n        return countries.map((country)=>country.name)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { fetchDailyData } from '../../api'\r\nimport {Line, Bar} from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Charts = ({data:{confirmed, deaths, recovered }, country}) => {\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () =>{\r\n           setDailyData(await fetchDailyData())\r\n        }\r\n        fetchAPI()\r\n    }, [])\r\n\r\n    const lineChart = (\r\n        dailyData.length \r\n        ?(<Line\r\n        data={{\r\n            labels: dailyData.map(({ date }) => date ),\r\n            datasets: [{\r\n                data: dailyData.map(({ confirmed }) => confirmed ),\r\n                label: 'Infected',\r\n                border: '#3333ff',\r\n                fill: true\r\n            }, {\r\n                data: dailyData.map(({ deaths }) => deaths ),\r\n                label: 'Deaths',\r\n                border: 'red',\r\n                backgroundColor: 'rgba(255,0,0,0.5',\r\n                fill: true\r\n            }]\r\n        }}      \r\n        />) : null\r\n    )\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ?(\r\n            <Bar \r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets:[{\r\n                        label: 'People',\r\n                        backgroundColor: ['rgba(0, 0, 255, 0.5)',\r\n                        'rgba(0, 255, 0, 0.5)',\r\n                        'rgba(255, 0, 0, 0.5)'\r\n                    ],\r\n                    data: [confirmed.value, recovered.value, deaths.value]\r\n \r\n                    }]\r\n                }}\r\n                options={{ \r\n                    legend: {display: false},\r\n                    title: {display: true, text: `Current state in ${country}`}\r\n                }}\r\n            />\r\n        ) : null\r\n    )\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts","import React, {useState, useEffect} from 'react'\r\nimport {NativeSelect, FormControl} from '@material-ui/core'\r\n\r\nimport styles from './CountryPicker.module.css'\r\n\r\nimport { fetchCountries } from '../../api'\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]) \r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async ()=>{\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n        fetchAPI()\r\n    }, [setFetchedCountries])     \r\n\r\n    return(\r\n        <FormControl classNames={styles.FormControl}>\r\n            <NativeSelect defaultValue = '' onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i)=> <option key ={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker\r\n","import React from 'react'\r\n\r\nimport {Cards, Chart, CountryPicker} from './components'\r\nimport styles from './App.module.css'\r\nimport { fetchData } from './api'   // whenever you have index files you dont need to specify the complte folder name\r\n\r\nimport coronaImage from './images/image.PNG'\r\n\r\nclass App extends React.Component {\r\n    \r\n    state ={\r\n        data: {},\r\n        country: '', \r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData()\r\n\r\n        this.setState({data: fetchedData})\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country)\r\n        this.setState({data: fetchedData, country: country})\r\n        //fetch data\r\n        //set state\r\n    }\r\n    render() {\r\n        const { data, country } = this.state\r\n        return (\r\n            \r\n            <div className={styles.container}>\r\n                <img className={styles.image} src= {coronaImage} alt='COVID-19'/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\nReactDOM.render(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3JGR9\",\"image\":\"App_image__1-GbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3VCfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3rR59\"};","module.exports = __webpack_public_path__ + \"static/media/image.be3a9d7a.PNG\";"],"sourceRoot":""}